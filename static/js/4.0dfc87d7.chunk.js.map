{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","message","messageAvatar","DialogItem","path","id","dialog","activeLink","to","name","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","isAuth","values","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,WAAa,4BAA4B,OAAS,wBAAwB,cAAgB,+BAA+B,QAAU,yBAAyB,iBAAmB,kCAAkC,SAAW,4B,mFCWlQC,EATC,SAACC,GACb,OACI,sBAAKC,UAAWC,IAAEC,QAAlB,UACI,qBAAKF,UAAWC,IAAEE,gBAClB,8BAAMJ,EAAMG,c,QCOTE,EAVI,SAACL,GAChB,IAAIM,EAAO,YAAcN,EAAMO,GAC/B,OACI,sBAAKN,UAAWC,IAAEM,OAAS,IAAMN,IAAEO,WAAnC,UACI,wBACA,cAAC,IAAD,CAASC,GAAIJ,EAAb,SAAoBN,EAAMW,W,yCC6BhCC,EAAcC,YAAiB,IAgB9BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAdN,SAACf,GACpB,OACI,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAC1CD,KAAK,iBAAiBa,YAAY,yBAE7C,8BACI,kDAQDC,EA/CC,SAACzB,GAEb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,MAAWoB,EAAExB,OAC1EyB,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAS/B,QAAS+B,EAAE/B,SAAc+B,EAAE3B,OAC9DmB,EAAMS,eAM3B,OAAKnC,EAAMoC,OAGP,sBAAKnC,UAAWC,IAAE2B,QAAlB,UACI,8BACKD,IAEL,sBAAK3B,UAAWC,IAAE+B,SAAlB,UACI,qBAAKhC,UAAWC,IAAE8B,iBAAlB,SACI,8BAAMA,MAEd,cAAClB,EAAD,CAAqBG,SAfT,SAACoB,GACjBrC,EAAMsC,YAAYD,EAAOF,yBAGH,cAAC,IAAD,CAAUzB,GAAI,Y,wBCD7B6B,sBACXC,aAdkB,SAACd,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACc,GACtB,MAAO,CACHH,YAAa,SAACH,GACVM,EAASC,YAAmBP,SAOpCQ,IAFWJ,CAGbd","file":"static/js/4.0dfc87d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Eife\",\"activeLink\":\"Dialogs_activeLink__mKWAv\",\"dialog\":\"Dialogs_dialog__1XDmY\",\"messageAvatar\":\"Dialogs_messageAvatar__eSdzD\",\"message\":\"Dialogs_message__11zF6\",\"messagesElements\":\"Dialogs_messagesElements__4ysjN\",\"messages\":\"Dialogs_messages__3MjTG\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.messageAvatar}></div>\r\n            <div>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog + \" \" + s.activeLink}>\r\n            <div></div>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id}/>)\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>)\r\n    let newMessageBody = state.newMessageBody\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div className={s.messagesElements}>\r\n                    <div>{messagesElements}</div>\r\n                </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]}\r\n                       name='newMessageBody' placeholder='Enter your message'/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst  AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}