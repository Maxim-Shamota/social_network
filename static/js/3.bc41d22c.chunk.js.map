{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","assets/images/enotic.png","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","formSummaryError","createFields","Input","type","Textarea","Object","keys","contacts","map","key","contact","ProfileData","isOwner","goToEditMode","onClick","userId","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","src","mainPhoto","alt","descriptionBlock","mainAvatarWrapper","photos","large","usersAvatar","mainAvatar","target","files","length","initialValues","formData","then","Post","item","message","likeCount","MyPosts","React","memo","postsElements","posts","p","id","myPostsBlock","values","addPost","newPostText","maxLength100","maxLengthCreator","AddNewPostForm","Field","component","name","validate","required","placeholder","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","store","ProfileContainer","userID","this","match","params","authorizedUserID","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,UAAY,+BAA+B,kBAAoB,uCAAuC,WAAa,gCAAgC,OAAS,4BAA4B,QAAU,6BAA6B,iBAAmB,wC,oBCA7TD,EAAOC,QAAU,CAAC,aAAe,8BAA8B,MAAQ,yB,oBCAvED,EAAOC,QAAU,CAAC,KAAO,qB,8ICyCVC,EAtCgB,SAACC,GAAW,IAAD,EAERC,oBAAS,GAFD,mBAEjCC,EAFiC,KAEvBC,EAFuB,OAGZF,mBAASD,EAAMI,QAHH,mBAGjCA,EAHiC,KAGzBC,EAHyB,KAKtCC,qBAAU,WACND,EAAUL,EAAMI,UAChB,CAACJ,EAAMI,SAeX,OACI,sBAAKG,UAAWC,IAAEJ,OAAlB,WACMF,GACE,gCACI,6CAAmB,sBAAMO,cAjBhB,WACrBN,GAAY,IAgBmB,SAA0CH,EAAMI,QAAU,kBAGpFF,GACG,8BACI,uBAAOQ,SAbA,SAACC,GACpBN,EAAWM,EAAEC,cAAcC,QAYkBC,WAAW,EAAMD,MAAOT,EAAQW,OAlBtD,WACvBZ,GAAY,GACZH,EAAMgB,aAAaZ,Y,QCnBZ,MAA0B,mC,iBCqC1Ba,EAFkBC,YAAU,CAAEC,KAAM,eAAlBD,EA9BT,SAAC,GAAsC,IAApCE,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC9C,OACI,uBAAMC,SAAUH,EAAhB,UACI,8BAAK,4CACJE,GAAS,qBAAKf,UAAWC,IAAEgB,iBAAlB,SAAqCF,IAC/C,gCACI,6CADJ,IACyBG,YAAa,YAAa,GAAIC,IAAO,eAE9D,gCACI,gCACI,qDADJ,IACiCD,YAAa,GAAI,GAAIC,IAAO,iBAAkB,CAAEC,KAAM,gBAEvF,gCACI,0DADJ,IACsCF,YAAa,yBAA0B,GAAIG,IAAU,gCAE3F,gCACI,4CADJ,IACwBH,YAAa,WAAY,GAAIG,IAAU,cAE/D,gCACI,yCADJ,KACsBC,OAAOC,KAAKT,EAAQU,UAAUC,KAAI,SAAAC,GAChD,OAAO,qBAAe1B,UAAWC,IAAE0B,QAA5B,SACH,8BAAID,EAAJ,MAAYR,YAAaQ,EAAK,GAAIP,IAAO,YAAcO,GAAvD,QADaA,kBCuBnCE,EAAc,SAAC,GAAwC,IAAtCd,EAAqC,EAArCA,QAASe,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aACrC,OACI,gCACKD,GAAW,8BAAK,wBAAQE,QAASD,EAAjB,oBACjB,gCACI,yCADJ,IACqBhB,EAAQkB,UAE7B,gCACI,6CADJ,IACyBlB,EAAQmB,YAEjC,gCACI,gCACI,qDADJ,IACiCnB,EAAQoB,eAAiB,MAAQ,QAEjEpB,EAAQoB,gBACL,gCACI,0DADJ,IACsCpB,EAAQqB,6BAGlD,gCACI,4CADJ,IACwBrB,EAAQsB,WAEhC,gCACI,yCADJ,KACsBd,OAAOC,KAAKT,EAAQU,UAAUC,KAAI,SAAAC,GAChD,OAAO,cAAC,EAAD,CAAmBW,aAAcX,EAAKY,aAAcxB,EAAQU,SAASE,IAAvDA,gBAQvCa,EAAU,SAAC,GAAoC,IAAlCF,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAC7B,OAAO,sBAAKtC,UAAWC,IAAE0B,QAAlB,UAA2B,4BAAIU,IAA/B,KAAmDC,MAG/CE,EA5EK,SAAC,GAAwE,IAAtE1B,EAAqE,EAArEA,QAASjB,EAA4D,EAA5DA,OAAQY,EAAoD,EAApDA,aAAcoB,EAAsC,EAAtCA,QAASY,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YAAkB,EAE1DhD,oBAAS,GAFiD,mBAEnFC,EAFmF,KAEzEC,EAFyE,KAIxF,IAAKkB,EACD,OAAO,cAAC6B,EAAA,EAAD,IAeX,OACI,gCACI,8BACI,qBAAKC,IAAKC,EAAWC,IAAI,YAE7B,sBAAK9C,UAAWC,IAAE8C,iBAAlB,UACI,qBAAK/C,UAAWC,IAAE+C,kBAAlB,SACI,qBAAKJ,IAAK9B,EAAQmC,OAAOC,OAASC,IAAanD,UAAWC,IAAEmD,eAE/DvB,GAAW,uBAAOT,KAAM,OAAQjB,SArBjB,SAACC,GACrBA,EAAEiD,OAAOC,MAAMC,QACfd,EAAUrC,EAAEiD,OAAOC,MAAM,OAoBrB,cAAC,EAAD,CAAwBzD,OAAQA,EAAQY,aAAcA,EAAcT,UAAWC,IAAEJ,SAEhFF,EACK,cAAC,EAAD,CAAiB6D,cAAe1C,EAASA,QAASA,EAASE,SAnB5D,SAACyC,GACdf,EAAYe,GAAUC,MAAK,WACvB9D,GAAY,SAkBF,cAAC,EAAD,CAAakC,aAAc,WAAQlC,GAAY,IAASkB,QAASA,EAASe,QAASA,W,4CC3B1F8B,EAZF,SAAClE,GACV,OACI,sBAAKO,UAAWC,IAAE2D,KAAlB,UACI,qBAAKhB,IAAI,qGAAqGE,IAAI,UACjHrD,EAAMoE,QACP,8BACI,yCAAYpE,EAAMqE,mB,gBCF5BC,EAAUC,IAAMC,MAAK,SAACxE,GAExB,IAAIyE,EAAgBzE,EAAM0E,MAAM1C,KAAI,SAAA2C,GAAC,OAAI,cAAC,EAAD,CAAMP,QAASO,EAAEP,QAASQ,GAAID,EAAEC,GAAIP,UAAWM,EAAEN,WAAgBM,EAAEC,OAM5G,OACI,sBAAKrE,UAAWC,IAAEqE,aAAlB,UACI,0CACA,cAAC,EAAD,CAAgBtD,SAPR,SAACuD,GACb9E,EAAM+E,QAAQD,EAAOE,gBAOjB,qBAAKzE,UAAWC,IAAEkE,MAAlB,SACMD,UAMdQ,EAAeC,YAAiB,KAEhCC,EAAiB,SAACnF,GAClB,OACI,uBAAMuB,SAAUvB,EAAMoB,aAAtB,UACI,8BACI,cAACgE,EAAA,EAAD,CAAOC,UAAWzD,IAAU0D,KAAK,cAAcC,SAAU,CAACC,IAAUP,GACpEQ,YAAY,oBAGhB,8BACI,oDAMhBN,EAAiBjE,YAAU,CAACC,KAAM,yBAAjBD,CAA2CiE,GAE7Cb,Q,QCxBAoB,EAFUC,aAdH,SAACC,GACnB,MAAO,CACHlB,MAAOkB,EAAMC,YAAYnB,MACzBM,YAAaY,EAAMC,YAAYb,gBAGd,SAACc,GACtB,MAAO,CACHf,QAAS,SAACC,GACNc,EAAUC,YAAqBf,QAKlBW,CAA6CrB,GCAvD0B,EAfC,SAAChG,GAEb,OACI,gCACI,cAAC,EAAD,CAAaqB,QAASrB,EAAMqB,QACfjB,OAAQJ,EAAMI,OACdY,aAAchB,EAAMgB,aACpBgC,UAAWhD,EAAMgD,UACjBC,YAAajD,EAAMiD,YACnBb,QAASpC,EAAMoC,UAC5B,cAAC,EAAD,CAAkB6D,MAAOjG,EAAMiG,Y,gBCPrCC,E,oKAEF,WACI,IAAIC,EAASC,KAAKpG,MAAMqG,MAAMC,OAAOH,OAEhCA,IACDA,EAASC,KAAKpG,MAAMuG,mBAEhBH,KAAKpG,MAAMwG,QAAQC,KAAK,UAGhCL,KAAKpG,MAAM0G,eAAeP,GAC1BC,KAAKpG,MAAM2G,UAAUR,K,+BAGzB,WACIC,KAAKQ,mB,gCAGT,SAAmBC,EAAWC,EAAWC,GACjCX,KAAKpG,MAAMqG,MAAMC,OAAOH,QAAUU,EAAUR,MAAMC,OAAOH,QACzDC,KAAKQ,mB,oBAIb,WACI,OACI,cAAC,EAAD,2BAAaR,KAAKpG,OAAlB,IACAoC,SAAUgE,KAAKpG,MAAMqG,MAAMC,OAAO/D,OAClClB,QAAS+E,KAAKpG,MAAMqB,QACpBjB,OAAQgG,KAAKpG,MAAMI,OACnBY,aAAcoF,KAAKpG,MAAMgB,aACzBgC,UAAWoD,KAAKpG,MAAMgD,iB,GAhCHuB,IAAMyC,WA4CtBC,sBACXtB,aARkB,SAACC,GAAD,MAAY,CAC9BvE,QAASuE,EAAMC,YAAYxE,QAC3BjB,OAAQwF,EAAMC,YAAYzF,OAC1BmG,iBAAkBX,EAAMsB,KAAKf,OAC7BgB,OAAQvB,EAAMsB,KAAKC,UAIM,CAAET,mBAAgBC,cAAW3F,iBAAcgC,cAAWC,kBAC/EmE,IAFWH,CAGbf","file":"static/js/3.bc41d22c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1cWOm\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1aLeo\",\"mainAvatarWrapper\":\"ProfileInfo_mainAvatarWrapper__KKsb0\",\"mainAvatar\":\"ProfileInfo_mainAvatar__33bKD\",\"status\":\"ProfileInfo_status__3JzBl\",\"contact\":\"ProfileInfo_contact__2PGSN\",\"formSummaryError\":\"ProfileInfo_formSummaryError__3zjpH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPostsBlock\":\"MyPosts_myPostsBlock__1tdZV\",\"posts\":\"MyPosts_posts__21cgG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3NB6D\"};","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => { \r\n        setStatus(props.status)\r\n     }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus( e.currentTarget.value )\r\n    }\r\n\r\n    return (\r\n        <div className={s.status}>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>My status : </b><span onDoubleClick={ activateEditMode }>{props.status || \"----------\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} value={status} onBlur={deactivateEditMode}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","export default __webpack_public_path__ + \"static/media/enotic.9b74c879.png\";","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport { reduxForm } from 'redux-form';\r\nimport { createFields, Input, Textarea } from './../../Common/FormsControls/FormsControls';\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><button>save</button></div>\r\n            {error && <div className={s.formSummaryError}>{error}</div>}\r\n            <div>\r\n                <b>Full name - </b> {createFields(\"Full name\", [], Input, \"fullName\")}\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <b>Looking for a job : </b> {createFields(\"\", [], Input, \"lookingForAJob\", { type: 'checkbox' })}\r\n                </div>\r\n                <div>\r\n                    <b>My professional skills : </b> {createFields(\"My professional skills\", [], Textarea, \"lookingForAJobDescription\")}\r\n                </div>\r\n                <div>\r\n                    <b>About me : </b> {createFields(\"About me\", [], Textarea, \"aboutMe\")}\r\n                </div>\r\n                <div>\r\n                    <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                        return <div key={key} className={s.contact}>\r\n                            <b>{key} : {createFields(key, [], Input, \"contacts.\" + key)} </b>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'editProfile' })(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport usersAvatar from \"../../../assets/images/avatar.jpg\";\r\nimport mainPhoto from \"./../../../assets/images/enotic.png\"\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={mainPhoto} alt=\"image\" />\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <div className={s.mainAvatarWrapper}>\r\n                    <img src={profile.photos.large || usersAvatar} className={s.mainAvatar} />\r\n                </div>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} className={s.status} />\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                    : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return (\r\n        <div>\r\n            {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n            <div>\r\n                <b>My ID - </b> {profile.userId}\r\n            </div>\r\n            <div>\r\n                <b>Full name - </b> {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <b>Looking for a job : </b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n                </div>\r\n                {profile.lookingForAJob &&\r\n                    <div>\r\n                        <b>My professional skills : </b> {profile.lookingForAJobDescription}\r\n                    </div>\r\n                }\r\n                <div>\r\n                    <b>About me : </b> {profile.aboutMe}\r\n                </div>\r\n                <div>\r\n                    <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://s1.1zoom.ru/big3/604/Raccoons_Closeup_Eyes_Snout_Glance_Whiskers_Nose_565212_2048x2048.jpg\" alt=\"image\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.likeCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} id={p.id} likeCount={p.likeCount} key={p.id}/>)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.myPostsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostForm onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nlet maxLength100 = maxLengthCreator(100)\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newPostText' validate={[required, maxLength100]}\r\n                placeholder='Post messages'\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddNewPostForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\nexport default MyPosts","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch( addPostActionCreator(newPostText) )\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} \r\n                         status={props.status} \r\n                         updateStatus={props.updateStatus} \r\n                         savePhoto={props.savePhoto}\r\n                         saveProfile={props.saveProfile}\r\n                         isOwner={props.isOwner}/>\r\n            <MyPostsContainer store={props.store}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStatus, getUserProfile, savePhoto, updateStatus, saveProfile } from \"../../redux/profileReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userID = this.props.match.params.userID\r\n\r\n        if (!userID) {\r\n            userID = this.props.authorizedUserID\r\n            if (!userID) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userID)\r\n        this.props.getStatus(userID)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userID != prevProps.match.params.userID) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n            isOwner={!this.props.match.params.userId}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n            savePhoto={this.props.savePhoto} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserID: state.auth.userID,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}